services:
  api-service:
    build:
      context: ../../apps/api
      dockerfile: Dockerfile
    container_name: api_service
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    networks:
      - kairo-network
    restart: always

  agent-service:
    build:
      context: ../../apps/agents/support-agent
      dockerfile: Dockerfile
    container_name: agent_service
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
    networks:
      - kairo-network
    restart: always

  redis:
    image: "redis:alpine"
    container_name: redis_cache
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - kairo-network
    restart: always

  # nginx:
  #   image: nginx:alpine
  #   container_name: nginx_proxy
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - /home/ubuntu/Kairo/nginx/default.conf:/etc/nginx/conf.d/:ro
  #     - cert:/etc/letsencrypt
  #     - webroot:/var/www/certbot:ro
  #   restart: always

  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot_client
  #   volumes:
  #     - cert:/etc/letsencrypt
  #     - webroot:/var/www/certbot

volumes:
  redis-data:
  # cert:
  # webroot:

networks:
  kairo-network:
    driver: bridge
